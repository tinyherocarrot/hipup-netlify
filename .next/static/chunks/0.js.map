{"version":3,"file":"static/chunks/0.js","sources":["webpack:///./components/NavLinks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\n\n// TODO: move this into a config file\nconst navLinks = [\n  { name: 'Projects', path: '/projects' },\n  { name: 'Publications', path: '/publications' },\n  { name: 'Community', path: '/community' },\n];\n\nconst NavLinks = () => {\n  const [menuOpen, toggleMenuOpen] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n  const handleMenuToggle = () => toggleMenuOpen(!menuOpen);\n\n  return (\n    <div className=\"nav-links\">\n      {width > 768 ? (\n        <>\n          {navLinks.map((link) => (\n            <Link href={link.path} key={link.name}>\n              <a className=\"page-link\">{link.name}</a>\n            </Link>\n          ))}\n        </>\n      ) : (\n        <>\n\n          <button onClick={handleMenuToggle}>\n            <div className=\"menu__bar\" />\n            <div className=\"menu__bar\" />\n          </button>\n          <MobileNavMenu menuOpen={menuOpen} handleClose={handleMenuToggle} />\n        </>\n      )}\n\n      <style jsx>\n        {`\n        .page-link {\n          color: black;\n          padding: 0.6rem;\n          margin-left: 2rem;\n          pointer: cursor;\n          border-bottom: 2px solid transparent;\n          transition: border-bottom 0.5s, color 0.4s;\n        }\n\n        .page-link:hover {\n          border-bottom: 2px solid rgba(75, 143, 204, 1);\n          color: rgba(75, 143, 204, 1);\n        }\n\n        button { \n          border: none;\n          cursor: pointer;\n          display: flex;\n          flex-direction: column;\n          background: none;\n        }\n        .menu__bar {\n          height: 0.2rem;\n          width: 1.2rem;\n          background-color: black;\n          margin: 0.1rem\n        }\n      `}\n\n      </style>\n    </div>\n  );\n};\n\nexport default NavLinks;\n\nconst MobileNavMenu = ({ menuOpen, handleClose }) => {\n  // FIXME:\n  useEffect(() => {\n    const onEscPress = (e) => {\n      // console.log(\"CUKDE\", e)\n      if (e.key == 'Escape') handleClose();\n    };\n    window.document.addEventListener('onkeypress', (e) => onEscPress(e));\n    // console.log(window.document.onkeypress)\n    return () => {\n      window.document.removeEventListener('onkeypress', onEscPress);\n    };\n  });\n  // FIXME: link clicks should close menu if already on specified page\n  return (\n    <div className=\"mobile-nav\">\n      <button className=\"menu-close\" onClick={handleClose}>\n        X\n      </button>\n      <div className=\"logo\">\n        <Link href=\"/\">\n          <a>HIPUP</a>\n        </Link>\n      </div>\n      <div className=\"mobile-navlinks\">\n        {navLinks.map((link) => (\n          <Link href={link.path} key={link.name}>\n            <a onClick={handleClose}>{link.name}</a>\n          </Link>\n        ))}\n      </div>\n      <style jsx>\n        {`\n          .menu-close {\n            border: none;\n            background-color: transparent;\n            cursor: pointer;\n            float: right;\n            font-size: 1.2rem;\n          }\n          .menu-close:hover {\n            opacity: 0.6;\n          }\n          .mobile-nav {\n            display: ${menuOpen ? 'flex' : 'none'};\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            gap: 2rem;\n            text-align: center;\n            position: absolute;\n            top: 0;\n            left: 0;\n            background-color: #737373;\n            color: white;\n            height: 100vh;\n            width: 100vw;\n            z-index: 9000;\n            font-size: 1.5rem;\n          }\n          .mobile-navlinks {\n            display: flex;\n            flex-direction: column;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AAJA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAdA;AACA;AAqEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AALA;AACA;AAMA;AACA;AADA;AATA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAfA;;;;A","sourceRoot":""}